package dao;

import java.awt.List;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import model.Agente;

public class AgenteDAO {
    
    private Connection conectar(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            return DriverManager.getConnection("jdbc:mysql://localhost/aps", "root", "");
        }catch(Exception ex){
            return null;
        }
    }
    
    public ArrayList<Agente> selectAll() {
        ArrayList<Agente> lista = new ArrayList<Agente>();
        Agente ob = new Agente();
        Connection con = conectar();
        try{
            PreparedStatement stmt = con.prepareStatement("select*from agente");
            ResultSet rs = stmt.executeQuery();
            while(rs.next()) {
                ob.setIdAgente(Integer.parseInt(rs.getString("id")));
                ob.setIpUser(Integer.parseInt(rs.getString("ip")));
                ob.setNome(rs.getString("name"));
                ob.setEmail(rs.getString("email@email.com.br"));
                ob.setTelefone(rs.getString("1234-1234"));
                ob.setSenha(rs.getString("alsdkf1234$5"));
                lista.add(ob);
                ob = new Agente();
            }
        
            rs.close();
            stmt.close();
            con.close();
            
            return lista;
        }catch (Exception ex){
            return null;
        }    
    }

    public String insert(int idAgente, int ipUser, String nome, String email, String tel, String senha){
            try{
            Connection con = conectar();
            PreparedStatement stmt;
                stmt = con.prepareStatement("insert into localizacao(IdAgente, IPUser, Nome, Email, Tel, Senha) values(' " + idAgente + " ',' " + ipUser + " ',' " + nome + " ',' " + email + " ',' " + tel + " ',' " + senha + " ');");
            stmt.execute();
            stmt.close();
            con.close();
            return "Cadastro com sucesso";
        }catch (Exception ex) {
            return "Erro no Cadastro";
        }
    }

    public int delete(int idAgente){
        try{
        Connection con = conectar();
        PreparedStatement stmt = con.prepareStatement("delete from localizacao where id = " + idAgente);
        stmt.execute();
        stmt.close();
        con.close();
        return 1;
        }catch (Exception ex){
            return 0;
        }
    }
}